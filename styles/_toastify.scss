@use 'variables' as *;
@use 'mixins' as *;
@use 'breakpoints' as *;
@use 'animations' as *;

.#{$rt-namespace} {
  &__toast-container {
    z-index: 10;
    transform: translate3d(0, 0, 1rem);
    position: fixed;
    padding: 0;
    width: 70vw;
    box-sizing: border-box;
    color: $clr-white;

    &--top-right {
      top: 1em;
      right: 1em;
      transform: translateX(0);
    }

    @include mobile {
      width: 32rem;
      padding: 4px;
      margin: 0;

      &--top-right {
        top: 1em;
        right: 1em;
      }
    }
  }

  &__toast {
    position: $p-relative;
    min-height: 6.3rem;
    box-sizing: border-box;
    margin-bottom: 1rem;
    padding: 8px;
    border-radius: 4px;
    display: flex;
    justify-content: space-between;
    max-height: 80rem;
    overflow: hidden;
    font-family: inherit;
    cursor: pointer;
    direction: ltr;
    z-index: 0;

    &-theme--light {
      background: $clr-white;
      color: $clr-dark-blue;
    }

    &--rtl {
      direction: rtl;
    }

    &-body {
      margin: auto 0;
      column-gap: 2rem;
      font-size: $fsz-xs;
      flex: 1 1 auto;
      padding: 6px;
      display: $d-flex;
      align-items: $center;
      & > div:last-child {
        flex: 1;
      }
    }

    &-icon {
      width: 2rem;
      fill: $clr-red;
      flex-shrink: 0;
      display: $d-flex;
    }
  }

  &__progress-bar {
    &-theme--light {
      background: $clr-red;
    }
  }

  &__progress-bar {
    @include absolute($bottom: 0, $left: 0);
    width: $width-base;
    height: 5px;
    z-index: 10;
    opacity: 0.7;
    transform-origin: left;

    &--animated {
      animation: #{$rt-namespace}__trackProgress linear 1 forwards;
    }

    &--controlled {
      transition: transform 0.2s;
    }

    &--rtl {
      right: 0;
      left: initial;
      transform-origin: right;
    }
  }

  &__close-button {
    color: #fff;
    background: transparent;
    outline: none;
    border: none;
    padding: 0;
    cursor: pointer;
    opacity: 0.7;
    transition: $transition;
    align-self: $start;

    &--light {
      color: $clr-dark-blue;
      opacity: 0.3;
    }

    & > svg {
      fill: currentColor;
      height: 1.6rem;
      width: 1.4rem;
    }

    &:hover,
    &:focus {
      opacity: 1;
    }
  }

  &--animate {
    animation-fill-mode: both;
    animation-duration: 0.7s;
  }
}
